upstream <%= application %>_backend {
  <% app_hosts.each do |host| %>
  server <%= host.hostname %>:<%= host.var('app_port') %> max_fails=3 fail_timeout=30s;
  <% end %>
  keepalive 32;
}

# HTTP server
server {
  listen <%= nginx_port %>;
  server_name <%= hostname %>;

  <% if ssl_enabled %>
  # Redirect HTTP to HTTPS
  return 301 https://$host$request_uri;
  <% else %>
  # Access and error logs
  access_log /var/log/nginx/<%= application %>.access.log combined buffer=512k flush=1m;
  error_log /var/log/nginx/<%= application %>.error.log;

  # Document root
  root <%= deploy_to %>/public;

  # Asset cache
  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    access_log off;
  }

  # Application proxy
  location / {
    try_files $uri @app;
  }

  location @app {
    proxy_pass http://<%= application %>_backend;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 8 8k;
    proxy_busy_buffers_size 16k;
    proxy_read_timeout 60s;
    proxy_send_timeout 60s;
  }

  # Health check endpoint
  location /health {
    access_log off;
    return 200 'ok';
    add_header Content-Type text/plain;
  }

  # Maintenance mode
  if (-f $document_root/maintenance.html) {
    return 503;
  }
  error_page 503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /maintenance.html break;
  }
  <% end %>
}

<% if ssl_enabled %>
# HTTPS server
server {
  listen 443 ssl http2;
  server_name <%= hostname %>;

  # SSL configuration
  ssl_certificate <%= ssl_cert_path %>/<%= application %>.crt;
  ssl_certificate_key <%= ssl_key_path %>/<%= application %>.key;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # Modern configuration
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers off;

  # HSTS (uncomment if you're sure)
  # add_header Strict-Transport-Security "max-age=63072000" always;

  # Access and error logs
  access_log /var/log/nginx/<%= application %>.access.log combined buffer=512k flush=1m;
  error_log /var/log/nginx/<%= application %>.error.log;

  # Document root
  root <%= deploy_to %>/public;

  # Asset cache
  location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    access_log off;
  }

  # Application proxy
  location / {
    try_files $uri @app;
  }

  location @app {
    proxy_pass http://<%= application %>_backend;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Connection "";
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 8 8k;
    proxy_busy_buffers_size 16k;
    proxy_read_timeout 60s;
    proxy_send_timeout 60s;
  }

  # Health check endpoint
  location /health {
    access_log off;
    return 200 'ok';
    add_header Content-Type text/plain;
  }

  # Maintenance mode
  if (-f $document_root/maintenance.html) {
    return 503;
  }
  error_page 503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /maintenance.html break;
  }
}
<% end %>