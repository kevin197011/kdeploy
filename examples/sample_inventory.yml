# Sample inventory file for Kdeploy
# This demonstrates various inventory features

# Global variables - available to all hosts
vars:
  application: myapp
  deploy_to: /opt/myapp
  environment: production
  repo_url: https://github.com/company/myapp.git

# Host groups configuration
groups:
  # Web servers group
  webservers:
    hosts:
      - web1.example.com
      - web2.example.com
      - web3.example.com
    vars:
      nginx_port: 80
      app_port: 3000
      ssl_enabled: true

  # Database servers group
  databases:
    hosts:
      - db1.example.com
      - db2.example.com
    vars:
      postgres_port: 5432
      backup_enabled: true
      max_connections: 200

  # Load balancers group
  loadbalancers:
    hosts:
      - lb1.example.com
      - lb2.example.com
    vars:
      haproxy_port: 80
      health_check_interval: 30

  # Production environment (includes all production servers)
  production:
    children:
      - webservers
      - databases
      - loadbalancers
    vars:
      environment: production
      log_level: info
      monitoring_enabled: true

  # Development group (subset for staging)
  development:
    hosts:
      - dev1.example.com
      - dev2.example.com
    vars:
      environment: development
      log_level: debug
      ssl_enabled: false

# Individual host configurations
hosts:
  # Web servers
  web1.example.com:
    user: deploy
    port: 22
    roles:
      - web
      - app
    ssh:
      key_file: ~/.ssh/production_key
      verify_host_key: false
      timeout: 30
    vars:
      server_id: 1
      memory_limit: 4GB
      cpu_cores: 4

  web2.example.com:
    user: deploy
    port: 22
    roles:
      - web
      - app
    ssh:
      key_file: ~/.ssh/production_key
      verify_host_key: false
    vars:
      server_id: 2
      memory_limit: 4GB
      cpu_cores: 4

  web3.example.com:
    user: deploy
    port: 2222  # Different SSH port
    roles:
      - web
      - app
    ssh:
      key_file: ~/.ssh/production_key
      verify_host_key: false
    vars:
      server_id: 3
      memory_limit: 8GB
      cpu_cores: 8

  # Database servers
  db1.example.com:
    user: postgres
    port: 22
    roles:
      - database
      - master
    ssh:
      key_file: ~/.ssh/database_key
      verify_host_key: false
    vars:
      server_id: 4
      master: true
      replica_of: null
      memory_limit: 16GB
      cpu_cores: 8

  db2.example.com:
    user: postgres
    port: 22
    roles:
      - database
      - slave
    ssh:
      key_file: ~/.ssh/database_key
      verify_host_key: false
    vars:
      server_id: 5
      master: false
      replica_of: db1.example.com
      memory_limit: 16GB
      cpu_cores: 8

  # Load balancers
  lb1.example.com:
    user: admin
    port: 22
    roles:
      - loadbalancer
      - primary
    ssh:
      key_file: ~/.ssh/lb_key
      verify_host_key: false
    vars:
      server_id: 6
      primary: true
      vip: 192.168.1.100

  lb2.example.com:
    user: admin
    port: 22
    roles:
      - loadbalancer
      - secondary
    ssh:
      key_file: ~/.ssh/lb_key
      verify_host_key: false
    vars:
      server_id: 7
      primary: false
      vip: 192.168.1.100

  # Development servers
  dev1.example.com:
    user: developer
    port: 22
    roles:
      - web
      - app
      - database
    ssh:
      key_file: ~/.ssh/dev_key
      verify_host_key: false
    vars:
      server_id: 8
      all_in_one: true

  dev2.example.com:
    user: developer
    port: 22
    roles:
      - web
      - app
    ssh:
      password: dev_password123  # Not recommended for production
      verify_host_key: false
    vars:
      server_id: 9
      testing_server: true